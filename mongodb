Aim: Design and Develop MongoDB Queries using CRUD operations. (Use CRUD operations, SAVE method, logical operators)

1.	Select all documents where the Designation field has the value "Programmer" and the value of the salary field is greater than 30000.
db.emp.find( {"Designation":"Programmer","Salary":{$gt:30000}} ).pretty()

2.	Creates a new document if no document in the employee collection contains
{Designation: "Tester", Company_name: "TCS", Age: 25} db.emp.update({Designation: "Tester", Company_name : "TCS" },{ $set : { Age: 25 } },{ upsert : true } )

3.	Selects all documents in the collection where the field age has a value less than 30 or the value of the salary field is greater than 40000.
db.emp.find( {$or:[ {Age:{$lt:30}}, {Salary:{$gt:40000}} ] } ).pretty()

4.	Matches all documents where the value of the field Address is an embedded document that contains only the field city with the value "Pune" and the field
Pin code with the value "411001".
db.emp.find( {"Address.PAddress":"Pune","Address.PinCode":"411001 "} ).pretty()

5.	Finds all documents with Company_name: "TCS" and modifies their salary field by 2000.
db.emp.update( {CName:"TCS"}, {$inc:{Salary:2000}}, {multi:true})

6.	Find documents where Designation is not equal to "Developer". db. emp.  {$ne: "Developer" } }).pretty()

7.	Find id, Designation, Address and Name from all documents where
Company_name is "Infosys".
db.emp.find( {CName:"Amazon"}, { id:1,Designation:1,Address:1,Name:1} ).pretty()

8.	Selects all documents in the employee collection where the value of the Designation is either "Developer" or "Tester".
db.emp.find( {$or:[{Designation:"Developer"},{Designation:"Tester"}]} ).pretty()
OR db.emp.find({Designation: { $in: [ 'Developer', ' Tester ' ] } } )

9.	Find all document with Exact Match on an Array having Expertise:
['Mongodb','Mysql', 'Cassandra'] db.emp. find( {Expertise: ["Mongodb" , " Mysql " , " Cassandra"] .pretty()

10.	Drop Single documents where designation="Developer". db. emp.remove({Designation: " Developer"}, 1 )
